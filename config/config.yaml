repo:
  path: "${REPO_PATH}"
  dev_branch: "${DEV_BRANCH}"
  default_remote: origin

# Server configuration
server:
  port: 8001  # Changed from 8000 to avoid conflicts with other repos
  host: "0.0.0.0"

# Local-first by default to honor your preconfigured CLIs.
providers:
  order:
    - "claude_cli"
    - "codex_cli"
    - "gemini_cli"
    - "cursor_cli"
    - "anthropic_api"
    - "openai_api"

  # Full access mode providers (interactive/session mode)
  full_access_order:
    - "claude_interactive"
    - "codex_interactive"
    - "claude_cli"
    - "anthropic_api"

  claude_cli:
    mode: "cli"
    binary: "claude"             # Anthropic Claude Code CLI. Non-interactive via -p.
    args: ["-p", "--output-format", "text"]  # or "json" if you prefer structured
    model: "sonnet"              # optional: e.g., "claude-sonnet-4-20250514"

  codex_cli:
    mode: "cli"
    binary: "codex"              # OpenAI Codex CLI (terminal agent). Non-interactive via 'exec'.
    args: ["exec"]               # will append the prompt at the end
    model: "o4-mini"             # CLI respects config; this is just a hint to include in prompts

  gemini_cli:
    mode: "cli"
    binary: "gemini"             # Google Gemini CLI. Non-interactive via -p
    args: ["-p"]                 # one-shot prompt mode
    model: "gemini-2.5-pro"      # or gemini-2.5-flash if you want speed

  cursor_cli:
    mode: "cli"
    binary: "cursor-agent"       # Cursor CLI. Non-interactive via -p
    args: ["-p", "--output-format", "text"]

  anthropic_api:
    mode: "api"
    model: "claude-3-5-sonnet-latest"
    max_tokens: 4096

  openai_api:
    mode: "api"
    model: "gpt-4o"

  # Interactive/Full Access Mode Providers
  claude_interactive:
    mode: "interactive"
    binary: "claude"
    args: ["--dangerously-skip-permissions"]  # Full access mode bypassing permissions
    model: "sonnet"
    description: "Claude Code in full access mode with permissions bypassed"

  codex_interactive:
    mode: "interactive"
    binary: "codex"
    args: ["--ask-for-approval", "never", "--sandbox", "danger-full-access"]
    model: "o4-mini"
    description: "Codex in full access mode with auto-approval and full sandbox access"

# Full access mode configuration
full_access:
  enabled: true
  default_provider_order: "full_access_order"
  repo_context: true  # Include full repository context
  allow_file_operations: true  # Enable create/read/write/delete operations
  allow_system_commands: true  # Enable system command execution

hygiene:
  checkpoint_minutes: 30
  pr_minutes: 120
  conventional_commits: true

worktrees:
  base_dir: "./worktrees"

# Multi-PR merge conflict resolution strategy
merge_strategy:
  mode: "sequential_rebase"  # Sequential processing with auto-rebase
  auto_rebase: true          # Automatically rebase branches before merging
  conflict_resolution: "auto" # auto | escalate | manual
  merge_order: ["security", "bug", "feature", "docs"]  # Priority order
  process_interval_minutes: 5  # How often to process merge queue
  max_concurrent_rebases: 3    # Limit concurrent rebase operations
  
# Merge queue configuration  
merge_queue:
  enabled: true
  auto_process: true         # Automatically process queue
  notify_conflicts: true     # Send notifications for unresolved conflicts
  escalation_timeout: 60     # Minutes before escalating conflicts

# Built-in roles (you can delete if you move them to roles/*.yaml)
roles:
  backend:
    branch_prefix: "feat/backend"
    reviewers: ["@org/backend-team"]
    prompt: |
      You are a pragmatic backend engineer. Follow FastAPI+pytest+ruff+mypy conventions.
  frontend:
    branch_prefix: "feat/frontend"
    reviewers: ["@org/frontend-team"]
    prompt: |
      You are a product-minded frontend engineer. Use modern React, Vite, and TypeScript.
  data:
    branch_prefix: "feat/data"
    reviewers: ["@org/data-team"]
    prompt: |
      You are a data engineer. Prefer Polars over pandas; write modular ETL and unit tests.
  ml:
    branch_prefix: "feat/ml"
    reviewers: ["@org/ml-team"]
    prompt: |
      You are an ML engineer. Add tests, deterministic seeds, and metrics logging.

# Directory where extra role YAMLs live (auto-loaded)
roles_dir: "roles"